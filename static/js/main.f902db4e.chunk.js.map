{"version":3,"sources":["styles/UrlInputBox.module.css","styles/VideoDetails.module.css","components/NavBar.jsx","components/routes/Home.jsx","services/api.js","components/UrlInputBox.jsx","components/VideoDetails.jsx","components/routes/Full.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","history","useHistory","handleRouteChange","e","push","currentTarget","value","className","type","id","name","defaultChecked","onChange","htmlFor","role","aria-label","Home","clientV1","axios","create","baseURL","getDetails","videoUrl","get","params","downloadVideo","responseType","then","response","fileDownload","data","UrlInputBox","props","state","showSearch","handleSearchButtonClick","handleButtonClick","bind","document","getElementById","this","onSearchButtonClick","setState","api","urlInputBoxStyles","placeholder","onClick","React","Component","VideoDetails","title","author","thumbnails","engagement","duration","detailsList","viewCount","hours","minutes","seconds","styles","src","highResUrl","alt","map","detail","Full","searchButtonClickHandler","videoDetails","App","location","useLocation","pathList","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f902db4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input-box\":\"UrlInputBox_url-input-box__QUj_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video-details\":\"VideoDetails_video-details__s2NJ0\"};","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../styles/NavBar.css\";\n\nconst NavBar = () => {\n  const history = useHistory();\n\n  function handleRouteChange(e) {\n    history.push(`/${e.currentTarget.value}`);\n  }\n\n  return (\n    <div>\n      <nav className=\"slidemenu\">\n        <input\n          type=\"radio\"\n          id=\"slide-item-1\"\n          name=\"route\"\n          className=\"slide-toggle\"\n          defaultChecked\n          value=\"\"\n          onChange={(e) => handleRouteChange(e)}\n        />\n        <label htmlFor=\"slide-item-1\">\n          <span className=\"icon\" role=\"img\" aria-label=\"video-only\">\n            ‚≠ê\n          </span>\n          <span>Home</span>\n        </label>\n\n        <input\n          type=\"radio\"\n          id=\"slide-item-2\"\n          name=\"route\"\n          className=\"slide-toggle\"\n          value=\"full\"\n          onChange={(e) => handleRouteChange(e)}\n        />\n        <label htmlFor=\"slide-item-2\">\n          <span className=\"icon\" role=\"img\" aria-label=\"video-only\">\n            üìπ\n          </span>\n          <span>Full</span>\n        </label>\n\n        <input\n          type=\"radio\"\n          id=\"slide-item-3\"\n          name=\"route\"\n          className=\"slide-toggle\"\n        />\n        <label htmlFor=\"slide-item-3\">\n          <span className=\"icon\" role=\"img\" aria-label=\"video-only\">\n            üîä\n          </span>\n          <span>Sound Only</span>\n        </label>\n\n        <input\n          type=\"radio\"\n          id=\"slide-item-4\"\n          name=\"route\"\n          className=\"slide-toggle\"\n        />\n        <label htmlFor=\"slide-item-4\">\n          <span className=\"icon\" role=\"img\" aria-label=\"video-only\">\n            üîá\n          </span>\n          <span>Video Only</span>\n        </label>\n\n        <div className=\"clear\"></div>\n\n        <div className=\"slider\">\n          <div className=\"bar\"></div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"content\">\n      <h1>Home</h1>\n      <p>Welcome to YoutubeDownloader</p>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nimport fileDownload from \"js-file-download\";\n\nconst clientV1 = axios.create({\n  baseURL: \"https://localhost:44319/api/v1/\",\n});\n\nconst v1 = {\n  getDetails: (videoUrl) => {\n    return clientV1.get(\"/videos/details/\", {\n      params: { videoUrl: videoUrl },\n    });\n  },\n  downloadVideo: (videoUrl) => {\n    clientV1\n      .get(\"/videos/download/\", {\n        params: { videoUrl: videoUrl },\n        responseType: \"blob\",\n      })\n      .then((response) => {\n        fileDownload(response.data, \"video.mp4\");\n      });\n    return;\n  },\n};\n\nexport default {\n  v1,\n};\n","import React from \"react\";\nimport api from \"../services/api\";\nimport urlInputBoxStyles from \"../styles/UrlInputBox.module.css\";\n\nclass UrlInputBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearch: true,\n    };\n\n    this.handleSearchButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick() {\n    const videoUrl = document.getElementById(\"url-box\").value;\n    if (this.state.showSearch) {\n      this.props.onSearchButtonClick(videoUrl);\n      this.setState({ showSearch: false });\n    } else {\n      api.v1.downloadVideo(videoUrl);\n    }\n  }\n\n  render() {\n    return (\n      <div className={urlInputBoxStyles[\"url-input-box\"]}>\n        <input\n          id=\"url-box\"\n          type=\"text\"\n          placeholder=\"Enter video's url here...\"\n        />\n        <button onClick={() => this.handleButtonClick()}>\n          {this.state.showSearch ? \"Search\" : \"Download\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default UrlInputBox;\n","import React from \"react\";\nimport styles from \"../styles/VideoDetails.module.css\";\n\nconst VideoDetails = (props) => {\n  const { title, author, thumbnails, engagement, duration } = props;\n\n  const detailsList = [\n    {\n      name: \"Author\",\n      value: author,\n    },\n    {\n      name: \"Views\",\n      value: engagement.viewCount,\n    },\n    {\n      name: \"Duration\",\n      value: `${duration.hours}:${duration.minutes}:${duration.seconds}`,\n    },\n  ];\n\n  return (\n    <div className={styles[\"video-details\"]}>\n      <div>\n        <img src={thumbnails.highResUrl} alt=\"thumbnail\" />\n      </div>\n      <div>\n        <h2>{title}</h2>\n        <hr />\n        <table>\n          <tr>\n            {detailsList.map((detail) => {\n              return (\n                <tr>\n                  <td>{detail.name}:</td>\n                  <td>{detail.value}</td>\n                </tr>\n              );\n            })}\n          </tr>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoDetails;\n","import React from \"react\";\nimport api from \"../../services/api\";\nimport UrlInputBox from \"../UrlInputBox\";\nimport VideoDetails from \"../VideoDetails\";\n\nclass Full extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchButtonClickHandler = this.searchButtonClickHandler.bind(this);\n    this.state = {\n      videoDetails: null,\n    };\n  }\n\n  searchButtonClickHandler(videoUrl) {\n    api.v1.getDetails(videoUrl).then((response) => {\n      this.setState({\n        videoDetails: response.data,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <h1>Full Download</h1>\n        <UrlInputBox onSearchButtonClick={this.searchButtonClickHandler} />\n        {this.state.videoDetails && (\n          <VideoDetails {...this.state.videoDetails} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Full;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport NavBar from \"./NavBar\";\nimport SlideRoutes from \"react-slide-routes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Full from \"./routes/Full\";\n\nfunction App() {\n  const location = useLocation();\n\n  return (\n    <div>\n      <NavBar />\n      <SlideRoutes location={location} duration={500} pathList={[\"/\", \"/full\"]}>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/full\" component={Full} />\n      </SlideRoutes>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}